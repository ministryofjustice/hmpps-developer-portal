import type { Environment } from '../data/strapiApiTypes'
import type { Summary } from '../data/converters/modelTypes'
import type { VeracodeResultsSummary } from '../data/modelTypes'

export const getProductionEnvironment = (envs?: Environment[]): Environment | undefined => {
  return envs?.find(environment => environment.name === 'prod')
}

export const countTrivyHighAndCritical = (summary?: Summary): number => {
  if (!summary) return 0
  const categories: Array<'os-pkgs' | 'lang-pkgs'> = ['os-pkgs', 'lang-pkgs']
  let total = 0
  categories.forEach(category => {
    const data = summary[category]
    if (data) {
      const fixed = (data.fixed ?? {}) as Record<string, number>
      const unfixed = (data.unfixed ?? {}) as Record<string, number>
      total += (fixed.CRITICAL ?? 0) + (fixed.HIGH ?? 0) + (unfixed.CRITICAL ?? 0) + (unfixed.HIGH ?? 0)
    }
  })
  return total
}

export const countVeracodeHighAndVeryHigh = (veracode?: VeracodeResultsSummary): number => {
  if (!veracode) return 0
  let total = 0
  veracode.severity?.forEach(severityLevel => {
    severityLevel.category.forEach(cat => {
      if (cat.severity === 'HIGH' || cat.severity === 'VERY_HIGH') {
        total += cat.count
      }
    })
  })
  return total
}

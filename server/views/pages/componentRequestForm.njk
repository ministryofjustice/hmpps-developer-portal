{% extends "../partials/layout.njk" %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %} 
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}

{% block content %}
<div class="govuk-grid-row govuk-body">
    {% include 'partials/errorSummary.njk' %}
    <h1 class="govuk-heading-xl">Component Request Form</h1>

    <h2>After submitting this form, SRE team will run the bootstrap job to create the github repo and service catalog entries. </h2>
    <div class="govuk-grid-column-one-half">
    <form action="/forms/component-request-form" method="POST">
      {%- set teams = [] -%}
      {%- set products = [] -%}
      {%- for product in productList -%}
      {%- set products = (products.push({
        value: product.value,
        text: product.text,
        selected: product.value == submittedForm.product
      }), products) -%}
      {%- endfor -%}
      {%- for team in teamList -%}
        {%- set teams = (teams.push({
          value: team.value,
          text: team.text,
          selected: team.value == submittedForm.requester_team
        }), teams) -%}
      {%- endfor -%}
      <input type="hidden" name="_csrf" value="{{ csrfToken }}">
      {{ govukInput({
        id: "github_repo",
        name: "github_repo",
        value: submittedForm.github_repo,
        classes: "govuk-!-width-one-half",
        label: {
          text: "Github repository name *",
          classes: "govuk-fieldset__legend--s"
        },
        hint: {
          text: "must start with hmpps- , contains only alphanumeric characters, only special character allowed Hyphen(-)"
        },
        errorMessage: validationErrors | findError('github_repo')
      }) }}
        {{ govukTextarea({
        id: "repo_description",
        name: "repo_description",
        value: submittedForm.repo_description,
        classes: "govuk-!-width-two-third",
        label: {
          text: "Github Repository Description *",
          classes: "govuk-fieldset__legend--s"
        },
        errorMessage: validationErrors | findError('repo_description')
      }) }}
      {{ govukRadios({
        classes: "govuk-radios--inline",
        idPrefix: "base_template",
        name: "base_template",
        value: submittedForm.base_template,
        errorMessage: validationErrors | findError('base_template'),
        fieldset: {
          legend: {
            text: "Github template repository *",
            classes: 'govuk-fieldset__legend--s'
          }
        },
        items: [
          {
            value: "hmpps-template-kotlin",
            text: "hmpps-template-kotlin"
          },
          {
            value: "hmpps-template-typescript",
            text: "hmpps-template-typescript"
          }]
      }) }}
      {{ govukSelect({
        id: "github_project_visibility",
        name: "github_project_visibility",
        value: submittedForm.github_project_visibility,
        label: {
          text: "Github project visbility *",
          classes: "govuk-fieldset__legend--s"
        },
        items: [
          {
            value: "public",
            text: "Public"
          },
          {
            value: "private",
            text: "Private"
          },
          {
            value: "internal",
            text: "Internal"
          }
        ],
        errorMessage: validationErrors | findError('github_project_visibility')
      }) }}

      {{ govukSelect({
        id: "product",
        name: "product",
        value: submittedForm.product,
        label: {
          text: "Product *",
          classes: "govuk-fieldset__legend--s"
        },
        items: products,
        errorMessage: validationErrors | findError('product')
      }) }}
      {{ govukInput({
        id: "jira_project_keys",
        name: "jira_project_keys",
        value: submittedForm.jira_project_keys,
        classes: "govuk-!-width-one-third",
        label: {
          text: "Jira Project Key",
          classes: "govuk-fieldset__legend--s"
        }
      }) }}
      {{ govukInput({
        id: "github_projects_teams_admin",
        name: "github_projects_teams_admin",
        value: submittedForm.github_projects_teams_admin,
        errorMessage: validationErrors | findError('github_projects_teams_admin'),
        classes: "govuk-!-width-two-third",
        label: {
          text: "Github Repository Admin Teams *",
          classes: "govuk-fieldset__legend--s"
        },
        hint: {
          text: "Separated by comma eg: hmpps-developers,haha"
        }
      }) }}
      {{ govukInput({
        id: "github_project_teams_write",
        name: "github_project_teams_write",
        value: submittedForm.github_project_teams_write,
        errorMessage: validationErrors | findError('github_project_teams_write'),
        classes: "govuk-!-width-two-third",
        label: {
          text: "Github Repository Teams with write permissions",
          classes: "govuk-fieldset__legend--s"
        },
        hint: {
          text: "Separated by comma eg: hmpps-developers,haha"
        }
      }) }}
      {{ govukInput({
        id: "github_project_branch_protection_restricted_teams",
        name: "github_project_branch_protection_restricted_teams",
        value: submittedForm.github_project_branch_protection_restricted_teams,
        errorMessage: validationErrors | findError('github_project_branch_protection_restricted_teams'),
        classes: "govuk-!-width-two-third",
        label: {
          text: "Github Project Teams Branch protection restricted teams",
          classes: "govuk-fieldset__legend--s"
        },
        hint: {
          text: "Separated by comma eg: hmpps-developers,haha"
        }
      }) }}
      {{ govukInput({
        id: "slack_channel_prod_release_notify",
        name: "slack_channel_prod_release_notify",
        value: submittedForm.slack_channel_prod_release_notify,
        errorMessage: validationErrors | findError('slack_channel_prod_release_notify'),
        classes: "govuk-!-width-one-half",
        label: {
          text: "Slack channel for Production release notifications *",
          classes: "govuk-fieldset__legend--s"
        }
      }) }}
        {{ govukInput({
        id: "slack_channel_nonprod_release_notify",
        name: "slack_channel_nonprod_release_notify",
        value: submittedForm.slack_channel_nonprod_release_notify,
        errorMessage: validationErrors | findError('slack_channel_nonprod_release_notify'),
        classes: "govuk-!-width-one-half",
        label: {
          text: "Slack channel for Non-Production release notifications *",
          classes: "govuk-fieldset__legend--s"
        }
      }) }}
      {{ govukInput({
        id: "slack_channel_security_scans_notify",
        name: "slack_channel_security_scans_notify",
        value: submittedForm.slack_channel_security_scans_notify,
        errorMessage: validationErrors | findError('slack_channel_security_scans_notify'),
        classes: "govuk-!-width-one-half",
        label: {
          text: "Slack channel for pipeline security notifications *",
          classes: "govuk-fieldset__legend--s"
        }
      }) }}
      <h3> For configurating alert severity labels, please first see <a href="https://user-guide.cloud-platform.service.justice.gov.uk/documentation/monitoring-an-app/how-to-create-alarms.html#creating-your-own-custom-alerts/">this document.</a></h3>
      {{ govukInput({
        id: "nonprod_alerts_severity_label",
        name: "nonprod_alerts_severity_label",
        value: submittedForm.nonprod_alerts_severity_label,
        errorMessage: validationErrors | findError('nonprod_alerts_severity_label'),
        classes: "govuk-!-width-one-third",
        label: {
          text: "Non-prod Severity label *",
          classes: "govuk-fieldset__legend--s"
        },
        hint: {
          text: "The k8s alerts severity label used by prometheus to route alert notifications to slack"
        }
      }) }}
        {{ govukInput({
        id: "prod_alerts_severity_label",
        name: "prod_alerts_severity_label",
        value: submittedForm.prod_alerts_severity_label,
        errorMessage: validationErrors | findError('prod_alerts_severity_label'),
        classes: "govuk-!-width-one-third govuk-fieldset__legend--s",
        label: {
          text: "Production k8s alerts *",
          classes: "govuk-fieldset__legend--s"
        },
        hint: {
          text: "The k8s alerts severity label used by prometheus to route alert notifications to slack"
        }
      }) }}
      <h3> Please Enter your contact details to send notification after processing request. </a></h3>
      {{ govukInput({
        id: "requester_name",
        name: "requester_name",
        value: submittedForm.requester_name,
        errorMessage: validationErrors | findError('requester_name'),
        classes: "govuk-!-width-one-half govuk-fieldset__legend--s",
        label: {
          text: "Requester Name *",
          classes: "govuk-fieldset__legend--s"
        }
      }) }}
      {{ govukInput({
        id: "requester_email",
        name: "requester_email",
        value: submittedForm.requester_email,
        errorMessage: validationErrors | findError('requester_email'),
        classes: "govuk-!-width-two-third govuk-fieldset__legend--s",
        label: {
          text: "Requester Email ID *",
          classes: "govuk-fieldset__legend--s"
        },
        hint: {
          text: "Must be @digital.justice.gov.uk"
        }
      }) }}
      {{ govukSelect({
        id: "requester_team",
        name: "requester_team",
        value: submittedForm.requester_team,
        selected: true,
        label: {
          text: "Team *",
          classes: "govuk-fieldset__legend--s"
        },
        items: teams,
        errorMessage: validationErrors | findError('requester_team')
      }) }}
      {{ govukButton({
        id: "submitdata",
        name: "submitdata",
        text: "Submit",
        element: "button",
        preventDoubleClick: true,
        attributes: { "data-test": "submit" }
      }) }}

  </form>
  </div>
</div>
{% endblock %}

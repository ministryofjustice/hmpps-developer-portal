{% extends "../partials/layout.njk" %}

{% set pageTitle = applicationName + " - " + component.name %}
{% set mainClasses = "app-container govuk-body" %}

{% block content %}

<h1 id="detailPageTitle">{{ component.name }}</h1>

<p>{{ component.description }}</p>
<p>Title: {{ component.title }}</p>
<p>Jira Project Keys: {{ component.jiraProjectKeys }}</p>
<p>GitHub Write: {{ component.githubWrite }}</p>
<p>GitHub Admin: {{ component.githubAdmin }}</p>
<p>GitHub Restricted: {{ component.githubRestricted }}</p>
<p>GitHub Repo: {{ component.githubRepo }}</p>
<p>GitHub Visibility: {{ component.githubVisibility }}</p>
<p>App Insights Cloud Role Name: {{ component.appInsightsName }}</p>
<p>API: {% if component.api %}Yes{% else %}No{% endif %}</p>
<p>Frontend: {% if component.frontend %}Yes{% else %}No{% endif %}</p>
<p>Part of monorepo: {% if component.partOfMonorepo %}Yes{% else %}No{% endif %}</p>
<p>Language: {{ component.language }}</p>
<p>Product: <a href="/products/{{ component.product.id }}">{{ component.product.attributes.name }}</a></p>
<p>Environments</p>
{% if component.environments | length %}
<table>
  <thead>
    <tr>
      <th>ID</th>
      <th>Name</th>
      <th>Namespace</th>
      <th>Info Path</th>
      <th>Health Path</th>
      <th>URL</th>
      <th>Cluster</th>
      <th>Version</th>
      <th>Status</th>
    </tr>
  </thead>
  <tbody>
  {% for environment in component.environments %}
    <tr>
      <td>{{ environment.id }}</td>
      <td>{{ environment.name }}</td>
      <td>{{ environment.namespace }}</td>
      <td>{{ environment.info_path }}</td>
      <td>{{ environment.health_path }}</td>
      <td><a href="{{ environment.url }}">{{ environment.url }}</a></td>
      <td>{{ environment.cluster }}</td>
      <td id="{{ environment.name }}_version"></td>
      <td id="{{ environment.name }}_status"></td>
    </tr>
  {% endfor %}
  </tbody>
</table>
{% else %}
<p>None</p>
{% endif %}

{% endblock %}

{% block bodyEnd %}
  <script src="/assets/govuk/all.js"></script>
  <script src="/assets/govukFrontendInit.js"></script>
  <script src="/assets/moj/all.js"></script>

  <script nonce="{{ cspNonce }}">
    const lastIds = {}
    const data = {}
    {% for environment in component.environments -%}
    lastIds['h:{{ environment.name }}'] = '0-0'
    lastIds['i:{{ environment.name }}'] = '0-0'
    lastIds['v:{{ environment.name }}'] = '0-0'
    data['h:{{ environment.name }}'] = ''
    data['i:{{ environment.name }}'] = ''
    data['v:{{ environment.name }}'] = ''
    {% endfor -%}

    const fetchMessages = async (queryStringOptions) => {
      const queryString = new URLSearchParams(queryStringOptions).toString()

      try {
        const response = await fetch(`/components/queue/{{ component.id }}/${queryString}`)

        if (!response.ok) {
          throw new Error('There was a problem fetching the component data')
        }

        const streamJson = await response.json()

        streamJson.forEach(stream => {
          const streamName = stream.name.split(':')
          const streamType = streamName[0].charAt(0)
          const streamKey = `${streamType}:${streamName[2]}`

          if (lastIds[streamKey]) {
            lastIds[streamKey] = stream.messages[0].id
          }
          if (data.hasOwnProperty(streamKey)) {
            console.log(stream.messages[0])
            data[streamKey] = stream.messages[0].message

            switch (streamType) {
              case 'v':
                $(`#${streamName[2]}_version`).text(data[streamKey].v)
                break
              case 'h':
                const status = JSON.parse(data[streamKey].json)
                $(`#${streamName[2]}_status`).text(status.status)
                break
            }
          }
        })
        console.log(data)
      } catch (e) {
        console.error(e)
      }
    }


    jQuery(function () {
      fetchMessages(lastIds)
    })
  </script>
{% endblock %}

{% extends "../partials/layout.njk" %}

{% set pageTitle = applicationName + " - " + component.name %}
{% set mainClasses = "app-container govuk-body" %}

{% block content %}

<h1 id="detailPageTitle">{{ component.name }}</h1>

<table class="componentData">
  <tbody>
    <tr>
      <th>Description</th>
      <td>{{ component.description }}</td>
    </tr>
    <tr>
      <th>Title</th>
      <td>{{ component.title }}</td>
    </tr>
    <tr>
      <th>Jira Project Keys</th>
      <td>{{ component.jiraProjectKeys }}</td>
    </tr>
    <tr>
      <th>GitHub Write</th>
      <td>{{ component.githubWrite }}</td>
    </tr>
    <tr>
      <th>GitHub Admin</th>
      <td>{{ component.githubAdmin }}</td>
    </tr>
    <tr>
      <th>GitHub Restricted</th>
      <td>{{ component.githubRestricted }}</td>
    </tr>
    <tr>
      <th>GitHub Repo</th>
      <td>{{ component.githubRepo }}</td>
    </tr>
    <tr>
      <th>GitHub Visibility</th>
      <td>{{ component.githubVisibility }}</td>
    </tr>
    <tr>
      <th>App Insights Cloud Role Name</th>
      <td>{{ component.appInsightsName }}</td>
    </tr>
    <tr>
      <th>API</th>
      <td>{% if component.api %}Yes{% else %}No{% endif %}</td>
    </tr>
    <tr>
      <th>Frontend</th>
      <td>{% if component.frontend %}Yes{% else %}No{% endif %}</td>
    </tr>
    <tr>
      <th>Part of monorepo</th>
      <td>{% if component.partOfMonorepo %}Yes{% else %}No{% endif %}</td>
    </tr>
    <tr>
      <th>Language</th>
      <td>{{ component.language }}</td>
    </tr>
    <tr>
      <th>Product</th>
      <td><a href="/products/{{ component.product.id }}">{{ component.product.attributes.name }}</a></td>
    </tr>
    <tr>
      <th>Environments</th>
      <td>
        {% if component.environments | length %}
        <table>
          <tbody>
            <tr>
              <th>ID</th>
              {% for environment in component.environments %}
              <td>{{ environment.id }}</td>
              {% endfor %}
            </tr>
            <tr>
              <th>Name</th>
              {% for environment in component.environments %}
              <td><a href="{{ environment.url }}">{{ environment.name }}</a></td>
              {% endfor %}
            </tr>
            <tr>
              <th>Namespace</th>
              {% for environment in component.environments %}
              <td>{{ environment.namespace }}</td>
              {% endfor %}
            </tr>
            <tr>
              <th>Info</th>
              {% for environment in component.environments %}
              <td>{{ environment.info_path }}</td>
              {% endfor %}
            </tr>
            <tr>
              <th>Health</th>
              {% for environment in component.environments %}
              <td>{{ environment.health_path }}</td>
              {% endfor %}
            </tr>
            <tr>
              <th>Cluster</th>
              {% for environment in component.environments %}
              <td>{{ environment.cluster }}</td>
              {% endfor %}
            </tr>
            <tr>
              <th>Version</th>
              {% for environment in component.environments %}
              <td id="{{ environment.name }}_version"></td>
              {% endfor %}
            </tr>
            <tr>
              <th>Status</th>
              {% for environment in component.environments %}
              <td id="{{ environment.name }}_status"></td>
              {% endfor %}
            </tr>
          </tbody>
        </table>
        {% else %}
        <p>None</p>
        {% endif %}
      </td>
    </tr>
  </tbody>
</table>

{% endblock %}

{% block bodyEnd %}
  <script src="/assets/govuk/all.js"></script>
  <script src="/assets/govukFrontendInit.js"></script>
  <script src="/assets/moj/all.js"></script>

  <script nonce="{{ cspNonce }}">
    const lastIds = {}
    const data = {}
    {% for environment in component.environments -%}
    lastIds['h:{{ environment.name }}'] = '0'
    lastIds['i:{{ environment.name }}'] = '0'
    lastIds['v:{{ environment.name }}'] = '0'
    data['h:{{ environment.name }}'] = ''
    data['i:{{ environment.name }}'] = ''
    data['v:{{ environment.name }}'] = ''
    {% endfor -%}

    const fetchMessages = async (queryStringOptions) => {
      const queryString = new URLSearchParams(queryStringOptions).toString()
      const response = await fetch(`/components/queue/{{ component.id }}/${queryString}`)

      if (!response.ok) {
        throw new Error('There was a problem fetching the component data')
      }

      try {
        const streamJson = await response.json()

        streamJson.forEach(stream => {
          const streamName = stream.name.split(':')
          const streamType = streamName[0].charAt(0)
          const streamKey = `${streamType}:${streamName[2]}`
          const lastMessage = stream.messages[stream.messages.length - 1]

          if (lastIds[streamKey]) {
            lastIds[streamKey] = lastMessage.id
          }

          if (data.hasOwnProperty(streamKey)) {
            data[streamKey] = lastMessage.message

            switch (streamType) {
              case 'v':
                $(`#${streamName[2]}_version`).text(data[streamKey].v)
                break
              case 'h':
                const jsonData = data[streamKey].json
                let status = 'UNK'

                try {
                  health = JSON.parse(jsonData)

                  if (health.hasOwnProperty('status')) {
                    status = health.status
                  } else {
                    status = health.healthy
                  }
                } catch (e) {
                  console.error('Error parsing JSON data')
                  console.error(e)
                }

                $(`#${streamName[2]}_status`).text(status)
                break
            }
          }
        })
      } catch (e) {
        console.error(e)
      }
    }

    const watch = async () => {
      await fetchMessages(lastIds)

      setTimeout(watch, 10000)
    }

    jQuery(function () {
      watch()
    })
  </script>
{% endblock %}
